local a=string.char;local b=string.byte;local c=string.sub;local d=bit32 or bit;local e=d.bxor;local f=table.concat;local g=table.insert;local function h(i,j)local k={}for l=1,#i do g(k,a(e(b(c(i,l,l+1)),b(c(j,1+l%#j,1+l%#j+1)))%256))end;return f(k)end;local m=tonumber;local n=string.byte;local o=string.char;local p=string.sub;local q=string.gsub;local r=string.rep;local s=table.concat;local t=table.insert;local u=math.ldexp;local v=getfenv or function()return _ENV end;local w=setmetatable;local x=pcall;local y=select;local z=unpack or table.unpack;local A=tonumber;local function B(C,D,...)local E=0;local F;local G;local H;local I;local J;local K;local L;local M;local N;local O;local P;local Q;while true do if E==1 then H=nil;function H(R,S,T)if T then local U=0;local V;while true do if U==0 then V=R/2^(S-(2-1))%2^(T-1-(S-1)+1)return V-V%1 end end else local W=0;local X;while true do if W==0 then X=2^(S-1)return R%(X+X)>=X and 1 or 0 end end end end;I=nil;E=2 end;if E==6 then P=nil;function P()local Y={}local Z={}local _={}local a0={Y,Z,nil,_}local a1=K()local a2={}for a3=1,a1 do local a4=I()local a5;if a4==1 then a5=I()~=0 elseif a4==2 then a5=L()elseif a4==3 then a5=M()end;a2[a3]=a5 end;a0[3]=I()for a6=1,K()do local a7=0;local a8;while true do if a7==0 then a8=I()if H(a8,1,1)==0 then local a9=0;local aa;local ab;local ac;while true do if a9==3 then if H(ab,3,3)==1 then ac[4]=a2[ac[1+3]]end;Y[a6]=ac;break end;if 2==a9 then if H(ab,1,1)==1 then ac[1+1]=a2[ac[2]]end;if H(ab,2,2)==1 then ac[3]=a2[ac[3]]end;a9=3 end;if a9==1 then ac={J(),J(),nil,nil}if aa==0 then local ad=0;while true do if 0==ad then ac[3]=J()ac[4]=J()break end end elseif aa==1 then ac[3]=K()elseif aa==2 then ac[3]=K()-2^16 elseif aa==3 then local ae=0;while true do if ae==0 then ac[3]=K()-2^16;ac[4]=J()break end end end;a9=2 end;if a9==0 then aa=H(a8,2,3)ab=H(a8,4,6)a9=1 end end end;break end end end;for af=1,K()do Z[af-1]=P()end;return a0 end;Q=nil;E=7 end;if E==2 then function I()local ag=0;local ah;while true do if ag==0 then ah=n(C,F,F)F=F+1;ag=1 end;if ag==1 then return ah end end end;J=nil;function J()local ai=0;local aj;local ak;while true do if ai==1 then return ak*256+aj end;if ai==0 then aj,ak=n(C,F,F+3-1)F=F+4-2;ai=1 end end end;E=3 end;if E==5 then N=K;O=nil;function O(...)return{...},y("#",...)end;E=6 end;if E==3 then K=nil;function K()local al=0;local am;local an;local ao;local ap;while true do if al==0 then am,an,ao,ap=n(C,F,F+3)F=F+4;al=1 end;if 1==al then return ap*16777216+ao*65536+an*(875-(555+64))+am end end end;L=nil;E=4 end;if E==7 then function Q(aq,ar,as)local at=0;local au;local av;local aw;while true do if at==0 then au=aq[1]av=aq[2]at=1 end;if at==1 then aw=aq[880-(282+595)]return function(...)local ax=au;local ay=av;local az=aw;local aA=O;local aB=1;local aC=-1;local aD={}local aE={...}local aF=y("#",...)-(1638-(1523+114))local aG={}local aH={}for aI=0,aF do if aI>=az then aD[aI-az]=aE[aI+1]else aH[aI]=aE[aI+1]end end;local aJ=aF-az+1;local aK;local aL;while true do local aM=0;while true do if aM==1 then if aL<=47 then if aL<=21+2 then if aL<=11 then if aL<=5 then if aL<=2 then if aL<=0-0 then aH[aK[2]]=Q(ay[aK[3]],nil,as)elseif aL>1 then local aN=aK[2]local aO,aP=aA(aH[aN](z(aH,aN+1,aK[3])))aC=aP+aN-1;local aQ=1065-(68+997)for aR=aN,aC do aQ=aQ+1;aH[aR]=aO[aQ]end else local aS=0;local aT;local aU;local aV;while true do if aS==1 then aV=0;for aW=aT,aK[4]do local aX=0;while true do if 0==aX then aV=aV+4-3;aH[aW]=aU[aV]break end end end;break end;if aS==0 then aT=aK[2]aU={aH[aT](aH[aT+1271-(226+1044)])}aS=1 end end end elseif aL<=120-(32+85)then local aY=aK[2]local aZ,a_=aA(aH[aY](aH[aY+1]))aC=a_+aY-(1+0)local b0=0;for b1=aY,aC do local b2=0;while true do if b2==0 then b0=b0+1+0;aH[b1]=aZ[b0]break end end end elseif aL==4 then local b3=aK[2]do return aH[b3](z(aH,b3+1,aK[3]))end else do return end end elseif aL<=8 then if aL<=6 then local b4=aK[3]local b5=aH[b4]for b6=b4+1,aK[4]do b5=b5 ..aH[b6]end;aH[aK[959-(892+65)]]=b5 elseif aL>7 then aH[aK[2]]=aH[aK[3]]%aK[4]else local b7=aK[2]local b8=aH[aK[3]]aH[b7+1]=b8;aH[b7]=b8[aK[4]]end elseif aL<=9 then local b9=0;local ba;while true do if 0==b9 then ba=aK[2]do return z(aH,ba,aC)end;break end end elseif aL==10 then local bb=aK[2]aH[bb]=aH[bb](aH[bb+1])elseif not aH[aK[2]]then aB=aB+1 else aB=aK[3]end elseif aL<=17 then if aL<=32-18 then if aL<=12 then aH[aK[2]]=aK[3]elseif aL==13 then aH[aK[2]]=aH[aK[3]]else do return aH[aK[2]]()end end elseif aL<=15 then local bc=aK[2]local bd=aH[bc+3-1]local be=aH[bc]+bd;aH[bc]=be;if bd>0 then if be<=aH[bc+1]then local bf=0;while true do if bf==0 then aB=aK[3]aH[bc+3]=be;break end end end elseif be>=aH[bc+1]then local bg=0;while true do if 0==bg then aB=aK[4-1]aH[bc+3]=be;break end end end elseif aL==16 then local bh=aK[352-(87+263)]local bi=aH[bh]for bj=bh+1,aC do t(bi,aH[bj])end else local bk=0;local bl;local bm;local bn;while true do if bk==0 then bl=aK[2]bm={aH[bl](aH[bl+1])}bk=1 end;if bk==1 then bn=0;for bo=bl,aK[184-(67+113)]do bn=bn+1+0;aH[bo]=bm[bn]end;break end end end elseif aL<=20 then if aL<=18 then if aH[aK[2]]then aB=aB+1 else aB=aK[7-4]end elseif aL==19 then aH[aK[2]]=aK[3]+aH[aK[4]]else aH[aK[2]][aK[3]]=aH[aK[4]]end elseif aL<=21 then local bp=0;local bq;local br;local bs;local bt;while true do if bp==1 then aC=bs+bq-1;bt=0;bp=2 end;if bp==2 then for bu=bq,aC do local bv=0;while true do if bv==0 then bt=bt+1;aH[bu]=br[bt]break end end end;break end;if bp==0 then bq=aK[2]br,bs=aA(aH[bq](z(aH,bq+1,aK[3])))bp=1 end end elseif aL==22 then for bw=aK[2],aK[3+0]do aH[bw]=nil end elseif aH[aK[7-5]]==aH[aK[4]]then aB=aB+1 else aB=aK[955-(802+150)]end elseif aL<=35 then if aL<=29 then if aL<=26 then if aL<=24 then local bx=aK[5-3]local by=aK[6-2]local bz=bx+2;local bA={aH[bx](aH[bx+1],aH[bz])}for bB=1,by do aH[bz+bB]=bA[bB]end;local bC=bA[1]if bC then aH[bz]=bC;aB=aK[3]else aB=aB+1 end elseif aL>25 then local bD=aK[2]local bE=aH[bD]local bF=aH[bD+2]if bF>0 then if bE>aH[bD+1]then aB=aK[3]else aH[bD+3]=bE end elseif bE<aH[bD+1]then aB=aK[3+0]else aH[bD+1000-(915+82)]=bE end elseif aK[2]==aH[aK[4]]then aB=aB+2-1 else aB=aK[3]end elseif aL<=27 then for bG=aK[2],aK[3]do aH[bG]=nil end elseif aL==28 then aH[aK[2]]=Q(ay[aK[3]],nil,as)else aH[aK[2]][aH[aK[3]]]=aK[4]end elseif aL<=32 then if aL<=30 then aB=aK[3]elseif aL>31 then local bH=aK[2]aH[bH]=aH[bH](z(aH,bH+1,aK[3]))else local bI=0;local bJ;while true do if bI==0 then bJ=aK[2]aH[bJ](aH[bJ+1])break end end end elseif aL<=20+13 then local bK=aK[2]local bL=aH[bK]for bM=bK+1,aC do t(bL,aH[bM])end elseif aL==43-9 then local bN=aK[1189-(1069+118)]aH[bN]=aH[bN]()elseif aH[aK[2]]==aK[4]then aB=aB+1 else aB=aK[3]end elseif aL<=41 then if aL<=38 then if aL<=36 then aH[aK[2]]=aK[6-3]elseif aL>80-43 then if not aH[aK[2]]then aB=aB+1+0 else aB=aK[3]end else local bO=ay[aK[3]]local bP;local bQ={}bP=w({},{[h("\202\146\44\35\236\116\237","\17\149\205\69\77\136")]=function(bR,bS)local bT=bQ[bS]return bT[1][bT[2]]end,[h("\152\248\245\82\101\219\142\163\194\227","\224\199\167\155\55\18\178")]=function(bU,bV,bW)local bX=bQ[bV]bX[1][bX[2]]=bW end})for bY=1,aK[4]do local bZ=0;local b_;while true do if bZ==1 then if b_[1]==83 then bQ[bY-1]={aH,b_[4-1]}else bQ[bY-1]={ar,b_[3]}end;aG[#aG+1]=bQ;break end;if bZ==0 then aB=aB+1;b_=ax[aB]bZ=1 end end end;aH[aK[793-(368+423)]]=Q(bO,bP,as)end elseif aL<=39 then local c0=0;local c1;local c2;local c3;while true do if c0==2 then if c2>0 then if c3<=aH[c1+1]then local c4=0;while true do if c4==0 then aB=aK[3]aH[c1+3]=c3;break end end end elseif c3>=aH[c1+1]then aB=aK[3]aH[c1+3]=c3 end;break end;if c0==1 then c3=aH[c1]+c2;aH[c1]=c3;c0=2 end;if c0==0 then c1=aK[2]c2=aH[c1+2]c0=1 end end elseif aL>40 then aH[aK[2]]()else aH[aK[2]]=ar[aK[9-6]]end elseif aL<=44 then if aL<=42 then aH[aK[20-(10+8)]]={}elseif aL==43 then as[aK[3]]=aH[aK[2]]elseif aH[aK[2]]==aK[4]then aB=aB+1 else aB=aK[3]end elseif aL<=45 then local c5=aK[2]local c6,c7=aA(aH[c5](aH[c5+1]))aC=c7+c5-(3-2)local c8=0;for c9=c5,aC do local ca=0;while true do if ca==0 then c8=c8+1;aH[c9]=c6[c8]break end end end elseif aL==488-(416+26)then local cb=0;local cc;while true do if cb==0 then cc=aK[6-4]aH[cc]=aH[cc](z(aH,cc+1,aC))break end end else local cd=aK[2]do return z(aH,cd,aC)end end elseif aL<=71 then if aL<=59 then if aL<=53 then if aL<=50 then if aL<=48 then local ce=aK[2]aH[ce]=aH[ce]()elseif aL>22+27 then local cf=0;local cg;local ch;local ci;local cj;while true do if cf==2 then for ck=cg,aC do cj=cj+1;aH[ck]=ch[cj]end;break end;if cf==0 then cg=aK[2]ch,ci=aA(aH[cg](z(aH,cg+1,aC)))cf=1 end;if cf==1 then aC=ci+cg-1;cj=0;cf=2 end end else aH[aK[3-1]]=#aH[aK[3]]end elseif aL<=51 then local cl=aK[2]aH[cl](z(aH,cl+439-(145+293),aC))elseif aL==52 then local cm=0;local cn;while true do if cm==0 then cn=aK[2]aH[cn]=aH[cn](z(aH,cn+1,aK[3]))break end end else aH[aK[2]]=as[aK[3]]end elseif aL<=486-(44+386)then if aL<=54 then if aH[aK[2]]==aH[aK[4]]then aB=aB+1 else aB=aK[3]end elseif aL>55 then aH[aK[2]]=aH[aK[1489-(998+488)]][aK[4]]else aB=aK[3]end elseif aL<=57 then local co=0;local cp;while true do if 0==co then cp=aK[2]aH[cp](aH[cp+1])break end end elseif aL>58 then local cq=0;local cr;local cs;local ct;local cu;while true do if cq==2 then for cv=cr,aC do local cw=0;while true do if 0==cw then cu=cu+1;aH[cv]=cs[cu]break end end end;break end;if cq==0 then cr=aK[2]cs,ct=aA(aH[cr](z(aH,cr+1,aC)))cq=1 end;if cq==1 then aC=ct+cr-1;cu=0;cq=2 end end else aH[aK[2]]=aH[aK[3]]+aK[4]end elseif aL<=21+44 then if aL<=62 then if aL<=60 then local cx=0;local cy;while true do if cx==0 then cy=aK[2+0]aH[cy](z(aH,cy+1,aC))break end end elseif aL>61 then aH[aK[2]]=as[aK[3]]else do return end end elseif aL<=63 then local cz=0;local cA;while true do if 0==cz then cA=aK[2]aH[cA]=aH[cA](aH[cA+1])break end end elseif aL==64 then aH[aK[774-(201+571)]]=#aH[aK[3]]else local cB=0;local cC;while true do if cB==0 then cC=aK[2]aH[cC](z(aH,cC+1,aK[3]))break end end end elseif aL<=68 then if aL<=66 then local cD=0;local cE;local cF;local cG;while true do if 0==cD then cE=aK[2]cF={aH[cE](z(aH,cE+1139-(116+1022),aC))}cD=1 end;if cD==1 then cG=0;for cH=cE,aK[4]do cG=cG+1;aH[cH]=cF[cG]end;break end end elseif aL>67 then aH[aK[2]][aK[3]]=aH[aK[4]]else aH[aK[2]][aK[12-9]]=aK[4]end elseif aL<=69 then local cI=0;local cJ;local cK;while true do if cI==0 then cJ=aK[3]cK=aH[cJ]cI=1 end;if 1==cI then for cL=cJ+1+0,aK[4]do cK=cK..aH[cL]end;aH[aK[2]]=cK;break end end elseif aL==255-185 then do return aH[aK[7-5]]()end else local cM=0;local cN;local cO;local cP;while true do if cM==1 then cP=aH[cN+2]if cP>0 then if cO>aH[cN+1]then aB=aK[3]else aH[cN+3]=cO end elseif cO<aH[cN+1]then aB=aK[3]else aH[cN+3]=cO end;break end;if cM==0 then cN=aK[2]cO=aH[cN]cM=1 end end end elseif aL<=83 then if aL<=77 then if aL<=74 then if aL<=72 then aH[aK[2]]=aH[aK[3]]+aK[4]elseif aL==73 then if aH[aK[861-(814+45)]]then aB=aB+1 else aB=aK[3]end else local cQ=aK[2]local cR=aK[4]local cS=cQ+2;local cT={aH[cQ](aH[cQ+1],aH[cS])}for cU=1,cR do aH[cS+cU]=cT[cU]end;local cV=cT[1]if cV then aH[cS]=cV;aB=aK[3]else aB=aB+1 end end elseif aL<=75 then aH[aK[2]]()elseif aL>187-111 then local cW=aK[2]aH[cW](z(aH,cW+1,aK[3]))else local cX=0;local cY;local cZ;while true do if 1==cX then aH[cY+1+0]=cZ;aH[cY]=cZ[aK[4]]break end;if cX==0 then cY=aK[2]cZ=aH[aK[3]]cX=1 end end end elseif aL<=80 then if aL<=78 then local c_=aK[1+1]aH[c_]=aH[c_](z(aH,c_+1,aC))elseif aL==79 then aH[aK[2]]=aH[aK[3]][aK[4]]else aH[aK[2]]=ar[aK[3]]end elseif aL<=81 then as[aK[3]]=aH[aK[2]]elseif aL==967-(261+624)then local d0=aK[2]do return aH[d0](z(aH,d0+1,aK[3]))end else aH[aK[3-1]]=aH[aK[3]]end elseif aL<=89 then if aL<=86 then if aL<=84 then if aK[2]==aH[aK[4]]then aB=aB+1 else aB=aK[3]end elseif aL==85 then aH[aK[2]][aH[aK[3]]]=aK[4]else aH[aK[2]][aK[3]]=aK[4]end elseif aL<=87 then local d1=0;local d2;local d3;local d4;while true do if d1==1 then d4={}d3=w({},{[h("\3\251\115\130\249\73\235","\147\92\164\26\236\157\44")]=function(d5,d6)local d7=0;local d8;while true do if d7==0 then d8=d4[d6]return d8[1][d8[1082-(1020+60)]]end end end,[h("\115\112\85\47\5\69\65\95\47\10","\114\44\47\59\74")]=function(d9,da,db)local dc=0;local dd;while true do if dc==0 then dd=d4[da]dd[1424-(630+793)][dd[2]]=db;break end end end})d1=2 end;if d1==0 then d2=ay[aK[3]]d3=nil;d1=1 end;if d1==2 then for de=3-2,aK[4]do local df=0;local dg;while true do if df==0 then aB=aB+1;dg=ax[aB]df=1 end;if df==1 then if dg[1]==83 then d4[de-1]={aH,dg[14-11]}else d4[de-1]={ar,dg[3]}end;aG[#aG+1]=d4;break end end end;aH[aK[2]]=Q(d2,d3,as)break end end elseif aL==88 then aH[aK[2]][aH[aK[3]]]=aH[aK[4]]else aH[aK[2]]=aH[aK[3]]%aK[4]end elseif aL<=92 then if aL<=36+54 then aH[aK[2]]=aH[aK[3]]%aH[aK[4]]elseif aL>91 then aH[aK[2]]={}else local dh=0;local di;local dj;local dk;while true do if 1==dh then dk=0-0;for dl=di,aK[4]do local dm=0;while true do if dm==0 then dk=dk+1;aH[dl]=dj[dk]break end end end;break end;if dh==0 then di=aK[2]dj={aH[di](z(aH,di+1,aC))}dh=1 end end end elseif aL<=93 then aH[aK[2]]=aH[aK[3]]%aH[aK[4]]elseif aL==94 then aH[aK[2]][aH[aK[3]]]=aH[aK[4]]else aH[aK[2]]=aK[1750-(760+987)]+aH[aK[4]]end;aB=aB+1914-(1789+124)break end;if aM==0 then aK=ax[aB]aL=aK[1]aM=1 end end end end end end end;return Q(P(),{},D)(...)end;if E==0 then F=2-1;G=nil;C=q(p(C,5),h("\74\253","\181\100\211\69\177"),function(dn)if n(dn,2)==79 then G=m(p(dn,1,1))return""else local dp=0;local dq;while true do if dp==0 then dq=o(m(dn,16))if G then local dr=0;local ds;while true do if dr==1 then return ds end;if dr==0 then ds=r(dq,G)G=nil;dr=1 end end else return dq end;break end end end end)E=1 end;if 4==E then function L()local dt=K()local du=K()local dv=1;local dw=H(du,1,20)*2^32+dt;local dx=H(du,952-(857+74),31)local dy=H(du,32)==1 and-1 or 1;if dx==568-(367+201)then if dw==0 then return dy*(927-(214+713))else dx=1;dv=0 end elseif dx==2047 then return dw==0 and dy*1/0 or dy*NaN end;return u(dy,dx-1023)*(dv+dw/2^52)end;M=nil;function M(dz)local dA=0;local dB;local dC;while true do if dA==3 then return s(dC)end;if dA==2 then dC={}for dD=1,#dB do dC[dD]=o(n(p(dB,dD,dD)))end;dA=3 end;if dA==0 then dB=nil;if not dz then dz=K()if dz==0 then return""end end;dA=1 end;if dA==1 then dB=p(C,F,F+dz-1)F=F+dz;dA=2 end end end;E=5 end end endv(),...)
